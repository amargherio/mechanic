apiVersion: v1
kind: Namespace
metadata:
  name: mechanic
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mechanic
  namespace: mechanic
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mechanic-cr
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - "apps"
    resources:
      - daemonsets
      - statefulsets
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - replicasets
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mechanic-eventer
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mechanic-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mechanic-cr
subjects:
  - kind: ServiceAccount
    name: mechanic
    namespace: mechanic
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mechanic-eventer-rb
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mechanic-eventer
subjects:
  - kind: ServiceAccount
    name: mechanic
    namespace: mechanic
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mechanic
  namespace: mechanic
data:
  mechanic.yaml: |
    vmEvents:
      freeze: false
      reboot: true
      redeploy: false
      preempt: true
      terminate: true
      liveMigration: true
    optional:
      kernelDeadlock: true
      kubeletProblem: true
      frequentKubeletRestarts: true
      frequentContainerdRestarts: true
      fsCorrupt: true
    runtimeEnv: prod
    enableTracing: true
    bypassNodeProblemDetector: false
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mechanic
  namespace: mechanic
spec:
  selector:
    matchLabels:
      app: mechanic
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mechanic
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      serviceAccountName: mechanic
      hostPID: true # Facilitates entering the host mount namespace via init
      containers:
      - name: mechanic
        image: ghcr.io/amargherio/mechanic:v2025.4-distroless
        imagePullPolicy: Always
        securityContext:
          privileged: true # Gives permission to nsenter /proc/1/ns/mnt
          readOnlyRootFilesystem: true
        env:
        - name: MECHANIC_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 25Mi
        volumeMounts:
          - name: config
            mountPath: /etc/mechanic
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: mechanic
